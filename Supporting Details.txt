======================================================================
# Prerequisites:
-----------------------
Spring Tool Suite(STS)
PostgreSQL
Postman
======================================================================


# Run application using below steps :
----------------------------------------
STEP 1:
Download the project and import it in STS as existing maven project.
-----------------------------------------------------------------------------------
STEP 2:
Create a PostgreSQL/MySQL database named rewards.
-----------------------------------------------------------------------------------
STEP 3:
Update the application.properties file with your PostgreSQL/MySQL credentials.
Also cross check the dependancy of PostgreSQL/MySQL which ever you are going to use.
If getting any issue then plz check the below document
https://github.com/joshirushikesh141/RewardPointsProgram/blob/main/DatabaseAll.txt
-----------------------------------------------------------------------------------
STEP 4:
For this project I have applied Spring Security Basic Authentication.
Username 1: rushikesh
Password 1: rushikesh
and
Username 2: admin
Password 2: admin

Use above username and passwords while testing in Postman or Swagger UI.
As per the requirement you can add or edit the users in SecurityConfig file.
-----------------------------------------------------------------------------------
STEP 5:
Run the project and and test it in Postman or on SwaggerUI.
http://localhost:8080/swagger-ui/index.html
-----------------------------------------------------------------------------------

NOTE: To test on postman tool, I have provided all the required details and dummy data as below.

=================================================================================================

API's as below
---------------------

# CUSTOMER
-------------------------------------------
POST
localhost:8080/api/customerRegistration

{
    "customerName": "Vidya"
}
-------------------------------------------
GET
localhost:8080/api/getRegisteredCustomerDetailsById/3
-------------------------------------------
PUT
localhost:8080/api/updateCustomerDetails/7
{
    "customerName": "Rama"
}
-------------------------------------------
DELETE
localhost:8080/api/deleteCustomerDetails/8
-------------------------------------------


# TRANSACTION
-------------------------------------------
POST
localhost:8080/api/saveTransactionDetails
{
    "customerId": 2,
    "transactionDate": "2024-11-28T14:23:00",
    "transactionAmount": 80
}
-------------------------------------------
POST
localhost:8080/api/saveAllTransactionDetails

Check list of object for this endpoint as last
-------------------------------------------
GET
localhost:8080/api/getTransactionDetailsByCustomerId/2
-------------------------------------------
PUT
localhost:8080/api/updateTransactionDetails/60
{
    "customerId":2,
    "transactionDate": "2024-12-22T08:30:00",
    "transactionAmount": 70
}
-------------------------------------------
DELETE
localhost:8080/api/deleteTransactionDetails/61
{
    "customerId":2,
    "transactionDate": "2024-12-22T08:30:00",
    "transactionAmount": 70
}
-------------------------------------------



# REWARDS
-------------------------------------------
GET
localhost:8080/api/rewards/2
-------------------------------------------
Transaction List
[
{
    "customerId": 2,
    "transactionDate": "2024-11-28T14:23:00",
    "transactionAmount": 80
  },
  {
    "customerId": 1,
    "transactionDate": "2024-10-10T12:45:00",
    "transactionAmount": 150
  },
  {
    "customerId": 3,
    "transactionDate": "2024-12-22T08:30:00",
    "transactionAmount": 45
  },
  {
    "customerId": 1,
    "transactionDate": "2024-09-15T10:00:00",
    "transactionAmount": 120
  },
  {
    "customerId": 2,
    "transactionDate": "2024-11-28T14:23:00",
    "transactionAmount": 80
  },
  {
    "customerId": 1,
    "transactionDate": "2024-10-10T12:45:00",
    "transactionAmount": 150
  },
  {
    "customerId": 3,
    "transactionDate": "2024-12-22T08:30:00",
    "transactionAmount": 45
  },
  {
    "customerId": 1,
    "transactionDate": "2024-09-15T10:00:00",
    "transactionAmount": 120
  },
  {
    "customerId": 2,
    "transactionDate": "2024-12-05T14:00:00",
    "transactionAmount": 60
  },
  {
    "customerId": 3,
    "transactionDate": "2024-11-15T13:30:00",
    "transactionAmount": 200
  },
  {
    "customerId": 1,
    "transactionDate": "2024-12-01T11:00:00",
    "transactionAmount": 50
  },
  {
    "customerId": 2,
    "transactionDate": "2024-10-20T16:45:00",
    "transactionAmount": 175
  },
  {
    "customerId": 3,
    "transactionDate": "2024-11-10T09:30:00",
    "transactionAmount": 120
  },
  {
    "customerId": 2,
    "transactionDate": "2024-12-10T15:10:00",
    "transactionAmount": 90
  },
  {
    "customerId": 1,
    "transactionDate": "2024-09-25T13:00:00",
    "transactionAmount": 180
  },
  {
    "customerId": 3,
    "transactionDate": "2024-12-15T07:50:00",
    "transactionAmount": 30
  },
  {
    "customerId": 1,
    "transactionDate": "2024-11-05T12:10:00",
    "transactionAmount": 60
  },
  {
    "customerId": 2,
    "transactionDate": "2024-10-30T14:40:00",
    "transactionAmount": 200
  },
  {
    "customerId": 3,
    "transactionDate": "2024-12-25T17:25:00",
    "transactionAmount": 95
  },
  {
    "customerId": 2,
    "transactionDate": "2024-11-20T16:00:00",
    "transactionAmount": 40
  },
  {
    "customerId": 1,
    "transactionDate": "2024-12-30T10:30:00",
    "transactionAmount": 110
  },
  {
    "customerId": 3,
    "transactionDate": "2024-11-30T18:00:00",
    "transactionAmount": 150
  },
  {
    "customerId": 1,
    "transactionDate": "2024-09-05T09:00:00",
    "transactionAmount": 65
  }
]
=============================================================



