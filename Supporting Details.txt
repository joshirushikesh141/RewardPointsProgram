Database used as MySQL/H2
Below are the API's to test

=======================================================

API's as below
---------------------

CUSTOMER
-------------------------------------------
POST
localhost:8080/api/customerRegistration

{
    "customerName": "Vidya"
}
-------------------------------------------
GET
localhost:8080/api/getRegisteredCustomerDetailsById/3
-------------------------------------------
PUT
localhost:8080/api/updateCustomerDetails/7
{
    "customerName": "Rama"
}
-------------------------------------------
DELETE
localhost:8080/api/deleteCustomerDetails/8
-------------------------------------------


TRANSACTION
-------------------------------------------
POST
localhost:8080/api/saveTransactionDetails
{
    "customerId": 2,
    "transactionDate": "2024-11-28T14:23:00",
    "transactionAmount": 80
}
-------------------------------------------
POST
localhost:8080/api/saveAllTransactionDetails

Check list of object for this endpoint as last
-------------------------------------------
GET
localhost:8080/api/getTransactionDetailsByCustomerId/2
-------------------------------------------
PUT
localhost:8080/api/updateTransactionDetails/60
{
    "customerId":2,
    "transactionDate": "2024-12-22T08:30:00",
    "transactionAmount": 70
}
-------------------------------------------
DELETE
localhost:8080/api/deleteTransactionDetails/61
{
    "customerId":2,
    "transactionDate": "2024-12-22T08:30:00",
    "transactionAmount": 70
}
-------------------------------------------



REWARDS
-------------------------------------------
GET
localhost:8080/api/rewards/2
-------------------------------------------
Transaction List
[
{
    "customerId": 2,
    "transactionDate": "2024-11-28T14:23:00",
    "transactionAmount": 80
  },
  {
    "customerId": 1,
    "transactionDate": "2024-10-10T12:45:00",
    "transactionAmount": 150
  },
  {
    "customerId": 3,
    "transactionDate": "2024-12-22T08:30:00",
    "transactionAmount": 45
  },
  {
    "customerId": 1,
    "transactionDate": "2024-09-15T10:00:00",
    "transactionAmount": 120
  },
  {
    "customerId": 2,
    "transactionDate": "2024-11-28T14:23:00",
    "transactionAmount": 80
  },
  {
    "customerId": 1,
    "transactionDate": "2024-10-10T12:45:00",
    "transactionAmount": 150
  },
  {
    "customerId": 3,
    "transactionDate": "2024-12-22T08:30:00",
    "transactionAmount": 45
  },
  {
    "customerId": 1,
    "transactionDate": "2024-09-15T10:00:00",
    "transactionAmount": 120
  },
  {
    "customerId": 2,
    "transactionDate": "2024-12-05T14:00:00",
    "transactionAmount": 60
  },
  {
    "customerId": 3,
    "transactionDate": "2024-11-15T13:30:00",
    "transactionAmount": 200
  },
  {
    "customerId": 1,
    "transactionDate": "2024-12-01T11:00:00",
    "transactionAmount": 50
  },
  {
    "customerId": 2,
    "transactionDate": "2024-10-20T16:45:00",
    "transactionAmount": 175
  },
  {
    "customerId": 3,
    "transactionDate": "2024-11-10T09:30:00",
    "transactionAmount": 120
  },
  {
    "customerId": 2,
    "transactionDate": "2024-12-10T15:10:00",
    "transactionAmount": 90
  },
  {
    "customerId": 1,
    "transactionDate": "2024-09-25T13:00:00",
    "transactionAmount": 180
  },
  {
    "customerId": 3,
    "transactionDate": "2024-12-15T07:50:00",
    "transactionAmount": 30
  },
  {
    "customerId": 1,
    "transactionDate": "2024-11-05T12:10:00",
    "transactionAmount": 60
  },
  {
    "customerId": 2,
    "transactionDate": "2024-10-30T14:40:00",
    "transactionAmount": 200
  },
  {
    "customerId": 3,
    "transactionDate": "2024-12-25T17:25:00",
    "transactionAmount": 95
  },
  {
    "customerId": 2,
    "transactionDate": "2024-11-20T16:00:00",
    "transactionAmount": 40
  },
  {
    "customerId": 1,
    "transactionDate": "2024-12-30T10:30:00",
    "transactionAmount": 110
  },
  {
    "customerId": 3,
    "transactionDate": "2024-11-30T18:00:00",
    "transactionAmount": 150
  },
  {
    "customerId": 1,
    "transactionDate": "2024-09-05T09:00:00",
    "transactionAmount": 65
  }
]
================================================
H2 Database

We can also use h2 console if needed as below.
http://localhost:8080/h2-console

<dependency>
	<groupId>com.h2database</groupId>
	<artifactId>h2</artifactId>
	<scope>runtime</scope>
 </dependency>

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

================================================
MySQL Database

<dependency>
      <groupId>com.mysql</groupId>
      <artifactId>mysql-connector-j</artifactId>
      <scope>runtime</scope>
</dependency>

spring.datasource.url=jdbc:mysql://localhost:3306/rewards
spring.datasource.username=root
spring.datasource.password=123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


SQL Queries to execute
--------------------------------------------

SHOW DATABASES;
CREATE DATABASE rewards;
USE rewards;

SHOW TABLES;

CREATE TABLE CUSTOMER (
    CUSTOMER_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    CUSTOMER_NAME VARCHAR(255) NOT NULL
);
SELECT * FROM CUSTOMER;

CREATE TABLE TRANSACTION (
    TRANSACTION_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    CUSTOMER_ID BIGINT NOT NULL,
    TRANSACTION_DATE DATE NOT NULL,
    AMOUNT DOUBLE NOT NULL,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
);

SELECT * FROM TRANSACTION;

=============================================================
